{
  "configuration_values_schema": {
    "type": "object",
    "properties": {
      "duration_check_interval": {
        "type": "number",
        "minimum": 0,
        "default": 10
      }
    }
  },
  "input_values_schema": {
    "title": "Configuration for a simple app",
    "description": "The app creates a mandelbrot or julia plot",
    "type": "object",
    "properties": {
      "test_id": {
        "description": "The ID of the foo-fighting test that this question belongs to.",
        "type": "integer"
      },
      "max_duration": {
        "description": "The maximum amount of time in seconds that should be spent calculating the Mandelbrot set.",
        "type": "number",
        "minimum": 0
      },
      "width": {
        "description": "Number of pixels the image contains in the x direction",
        "type": "integer",
        "minimum": 2,
        "default": 600
      },
      "height": {
        "description": "Number of pixels the image contains in the y direction",
        "type": "integer",
        "minimum": 2,
        "default": 600
      },
      "n_iterations": {
        "description": "Number of iterations used to render each pixel",
        "type": "integer",
        "minimum": 2,
        "default": 64
      },
      "color_scale": {
        "description": "The colour scale string to use when mapping colours. See https://plot.ly/ipython-notebooks/color-scales/ for valid scales",
        "type": "string",
        "enum": ["PuBu", "YlGnBu"],
        "default": "YlGnBu"
      },
      "x_range": {
        "description": "The x_min to x_max range of space in which to render the fractal",
        "type": "array",
        "items": {
          "type": "number"
        },
        "minItems": 2,
        "maxItems": 2,
        "default": [-1.5, 0.6]
      },
      "y_range": {
        "description": "The y_min to y_max range of space in which to render the fractal",
        "type": "array",
        "items": {
          "type": "number"
        },
        "minItems": 2,
        "maxItems": 2,
        "default": [-1.26, 1.26]
      }
    }
  },
  "monitor_message_schema": {
    "type": "object",
    "properties": {
      "x": { "type": "number" },
      "y": { "type": "number" },
      "z": { "type": "number" }
    },
    "required": ["x", "y", "z"]
  },
  "output_values_schema": {
    "type": "object",
    "properties": {
      "data": {
        "type": "object",
        "properties": {
          "x": {
            "type": "array",
            "items": {
              "type": "array",
              "items": {
                "type": "number"
              }
            }
          },
          "y": {
            "type": "array",
            "items": {
              "type": "array",
              "items": {
                "type": "number"
              }
            }
          },
          "z": {
            "type": "array",
            "items": {
              "type": "array",
              "items": {
                "type": "number"
              }
            }
          },
          "colorscale": {
            "type": "string"
          },
          "type": {
            "type": "string"
          }
        }
      },
      "layout": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string"
          },
          "width": {
            "type": "number"
          },
          "height": {
            "type": "number"
          }
        }
      }
    },
    "required": ["data", "layout"]
  }
}
